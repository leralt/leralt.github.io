<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on BytePro - A blog to record my learning and thinking</title>
    <link>http://leralt.github.io/tags/go/</link>
    <description>Recent content in Go on BytePro - A blog to record my learning and thinking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>bytepro</copyright>
    <lastBuildDate>Thu, 04 Aug 2022 20:11:34 +0800</lastBuildDate><atom:link href="http://leralt.github.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Protobuf</title>
      <link>http://leralt.github.io/post/obsidian/%E5%85%A5%E9%97%A8/protobuf/</link>
      <pubDate>Thu, 04 Aug 2022 20:11:34 +0800</pubDate>
      
      <guid>http://leralt.github.io/post/obsidian/%E5%85%A5%E9%97%A8/protobuf/</guid>
      <description>Go Protobuf 入门 简介 protobuf 即 Protocol Buffers，是一种轻便高效的结构化数据存储格式，与语言、平台无关，可扩展可序列化。protobuf 性能和效率大幅度优于</description>
    </item>
    
    <item>
      <title>GVM</title>
      <link>http://leralt.github.io/post/obsidian/%E5%85%A5%E9%97%A8/gvm/</link>
      <pubDate>Thu, 04 Aug 2022 20:11:20 +0800</pubDate>
      
      <guid>http://leralt.github.io/post/obsidian/%E5%85%A5%E9%97%A8/gvm/</guid>
      <description>GVM https://github.com/moovweb/gvm 1.GVM简介 GVM 是 Go Version Manager，可用于管理Go的版本，主要特性有： - 管理 Go 的多个版本，包括安装、卸载和指定使用 Go 的某个版本； - 查看</description>
    </item>
    
    <item>
      <title>gRPC</title>
      <link>http://leralt.github.io/post/obsidian/%E5%85%A5%E9%97%A8/grpc/</link>
      <pubDate>Thu, 04 Aug 2022 20:11:03 +0800</pubDate>
      
      <guid>http://leralt.github.io/post/obsidian/%E5%85%A5%E9%97%A8/grpc/</guid>
      <description>概述 开始 gRPC 了，这篇文章学习使用 gRPC，输出一个 Hello World。 用 Go 实现 gRPC 的服务端。 用 Go 实现 gRPC 的客户端。 gRPC 支持 4 类服务方法，咱们这次实现 单项 RPC</description>
    </item>
    
    <item>
      <title>Golang basic</title>
      <link>http://leralt.github.io/post/obsidian/%E5%85%A5%E9%97%A8/golang-basic/</link>
      <pubDate>Thu, 04 Aug 2022 20:10:49 +0800</pubDate>
      
      <guid>http://leralt.github.io/post/obsidian/%E5%85%A5%E9%97%A8/golang-basic/</guid>
      <description>Go语言基础 参考书籍：《The Go Programming Language》 入门视频：go语言快速入门 命名 名字的开头字母的大小写决定了名字在包外的可见性，大写表示导</description>
    </item>
    
    <item>
      <title>Go Get Started</title>
      <link>http://leralt.github.io/post/obsidian/%E5%85%A5%E9%97%A8/go-get-started/</link>
      <pubDate>Thu, 04 Aug 2022 20:10:22 +0800</pubDate>
      
      <guid>http://leralt.github.io/post/obsidian/%E5%85%A5%E9%97%A8/go-get-started/</guid>
      <description>Go语言基础 版本管理 gvm: https://github.com/moovweb/gvm 使用 GVM 工具管理 Go 版本 golang basic 目标：了解golang基础语法 推荐资料 https://go.dev/doc/ https://github.com/golang/go https://golang.org/doc/effective_go.html Book: 《Go程序设计语言》 推荐IDE: goland / vscode gin框</description>
    </item>
    
    <item>
      <title>Gin Web框架</title>
      <link>http://leralt.github.io/post/obsidian/%E5%85%A5%E9%97%A8/gin/</link>
      <pubDate>Thu, 04 Aug 2022 18:39:33 +0800</pubDate>
      
      <guid>http://leralt.github.io/post/obsidian/%E5%85%A5%E9%97%A8/gin/</guid>
      <description>Gin Web框架 安装 下载安装 1 go get -u github.com/gin-gonic/gin 导入到代码中 1 import &amp;#34;github.com/gin-gonic/gin&amp;#34; 开始 创建一个example.go文件，键入以下代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 package main import &amp;#34;github.com/gin-gonic/gin&amp;#34; func</description>
    </item>
    
    <item>
      <title>Golang Slice 踩坑-1</title>
      <link>http://leralt.github.io/post/obsidian/%E6%97%A7%E6%A1%A3/redis1/</link>
      <pubDate>Mon, 17 Jan 2022 18:11:04 +0800</pubDate>
      
      <guid>http://leralt.github.io/post/obsidian/%E6%97%A7%E6%A1%A3/redis1/</guid>
      <description>Go语言中Slice有一个常见的坑，就是数组的切片是否会改变原数组，网上解释的已经非常多了，今天我们来说一下另一个与Slice有关的问题 问题</description>
    </item>
    
  </channel>
</rss>
